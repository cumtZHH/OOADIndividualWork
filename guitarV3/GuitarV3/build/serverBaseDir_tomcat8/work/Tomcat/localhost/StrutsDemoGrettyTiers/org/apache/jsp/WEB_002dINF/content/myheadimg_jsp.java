/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2016-07-15 06:03:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.content;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myheadimg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\" />\r\n");
      out.write("<title>修改头像</title>\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"css/register.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".reg-item{width:100px;}\r\n");
      out.write("#clipArea {\r\n");
      out.write("\tmargin: 20px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("}\r\n");
      out.write("#file,\r\n");
      out.write("#clipBtn {\r\n");
      out.write("\tmargin: 20px;\r\n");
      out.write("}\r\n");
      out.write("#view {\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t<form action=\"addheadimg\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"register-box\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"login list-unstyled\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><span class=\"reg-item\">选择头像：</span></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><!-- <input name=\"upload\" type=\"file\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"clipArea\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"file\" id=\"file\" name=\"upload\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"button\" id=\"clipBtn\" value=\"截取\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"view\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t <a href=\"\"> <input class=\"btn btn-primary btn-lg btn-danger\" value=\"修改&gt;&gt;\" type=\"submit\"/></a>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script src=\"http://libs.baidu.com/jquery/2.1.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"js/iscroll-zoom.js\"></script>\r\n");
      out.write("<script src=\"js/hammer.js\"></script>\r\n");
      out.write("<script src=\"js/lrz.all.bundle.js\"></script>\r\n");
      out.write("<script src=\"js/jquery.photoClip.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("//document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\r\n");
      out.write("var clipArea = new bjj.PhotoClip(\"#clipArea\", {\r\n");
      out.write("\tsize: [260, 260],\r\n");
      out.write("\toutputSize: [450, 450],\r\n");
      out.write("\tfile: \"#file\",\r\n");
      out.write("\tview: \"#view\",\r\n");
      out.write("\tok: \"#clipBtn\",\r\n");
      out.write("\tloadStart: function() {\r\n");
      out.write("\t\tconsole.log(\"照片读取中\");\r\n");
      out.write("\t},\r\n");
      out.write("\tloadComplete: function() {\r\n");
      out.write("\t\tconsole.log(\"照片读取完成\");\r\n");
      out.write("\t},\r\n");
      out.write("\tclipFinish: function(dataURL) {\r\n");
      out.write("\t\tconsole.log(dataURL);\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("//clipArea.destroy();\r\n");
      out.write("</script>\r\n");
      out.write("<!-- <script src=\"js/jquery-1.11.1.min.js\"></script> -->\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
