/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2016-07-16 12:37:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.content;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cn.edu.cumt.ec.entity.OrderInformation;
import cn.edu.cumt.ec.dao.BuyList;
import java.text.DateFormat;
import java.util.*;
import java.text.SimpleDateFormat;

public final class myorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.3.24.3.jar", Long.valueOf(1468644515205L));
    _jspx_dependants.put("jar:file:/C:/gradle-2.11/caches/modules-2/files-2.1/org.apache.struts/struts2-core/2.3.24.3/216f43164806423390f3fc9f360ac20b8a2e6b17/struts2-core-2.3.24.3.jar!/META-INF/struts-tags.tld", Long.valueOf(1461132506000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cn.edu.cumt.ec.entity.OrderInformation");
    _jspx_imports_classes.add("cn.edu.cumt.ec.dao.BuyList");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      cn.edu.cumt.ec.dao.OrderDao orderDao = null;
      orderDao = (cn.edu.cumt.ec.dao.OrderDao) _jspx_page_context.getAttribute("orderDao", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (orderDao == null){
        orderDao = new cn.edu.cumt.ec.dao.OrderDao();
        _jspx_page_context.setAttribute("orderDao", orderDao, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\" />\r\n");
      out.write("<title>欢迎注册</title>\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* button伪装成超链接形式  */\r\n");
      out.write("button{\r\n");
      out.write("    font-size: 1em;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #000;\r\n");
      out.write("    background: none;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    border: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    outline:none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t <table class=\"table table-striped table-bordered table-hover\">\r\n");
      out.write("   <thead>\r\n");
      out.write("     <tr>\r\n");
      out.write("       <th>订单编号</th>\r\n");
      out.write("       <th>下单时间</th>\r\n");
      out.write("       <th>收货人</th>\r\n");
      out.write("       <th>订单金额</th>\r\n");
      out.write("       <th>订单状态</th>\r\n");
      out.write("       <th>订单详情</th>\r\n");
      out.write("     </tr>\r\n");
      out.write("   </thead>\r\n");
      out.write("   <tbody>\r\n");
      out.write("   ");

List list =orderDao.OrderShowuser(session.getAttribute("cuname").toString());
for(int i=0;i<list.size();i++){
  OrderInformation info=(OrderInformation)list.get(i);

      out.write("\r\n");
      out.write("\r\n");
      out.write("  <tr>\r\n");
      out.write("       <td>");
      out.print(info.getOid() );
      out.write("</td>\r\n");
      out.write("       ");
DateFormat df = DateFormat.getDateTimeInstance(); 
      out.write("\r\n");
      out.write("       <td>");
      out.print(df.format(info.getOtime()) );
      out.write("</td>\r\n");
      out.write("       <td>");
      out.print(info.getOname());
      out.write("</td>\r\n");
      out.write("       <td>");
      out.print(info.getOtotalprice());
      out.write("</td>\r\n");
      out.write("       <td>");
      out.print(info.getOstate());
      out.write("</td>\r\n");
      out.write("\t   <td><form mehod=\"post\" action=\"myitemorder\" class=\"buttonhref\"><input type=\"hidden\" name=\"oid\" value=\"");
      out.print(info.getOid() );
      out.write("\"><button type=\"submit\" style=\"background:none;border:none;\">查看订单详情</button></form></td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     ");
} 
      out.write("\r\n");
      out.write("   </tbody>\r\n");
      out.write(" </table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script src=\"js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
